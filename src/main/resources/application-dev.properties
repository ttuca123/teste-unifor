quarkus.http.port=8180
#ConfiguraÃ§Ãµes do banco
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/unifor
#quarkus.hibernate-orm.sql-load-script=import-ddl.sql
quarkus.hibernate-orm.database.generation=none
quarkus.datasource.jdbc.max-size=16
#ConfiguraÃ§Ã£o de logs
quarkus.hibernate-orm.log.sql=true
quarkus.log.level=INFO
quarkus.hibernate-orm.format-sql=true

# Habilitar CORS globalmente
quarkus.http.cors=true

# Permitir todas as origens
quarkus.http.cors.origins=*

# Permitir todos os métodos HTTP
quarkus.http.cors.methods=GET, POST, PUT, DELETE, OPTIONS

# Permitir todos os cabeçalhos
quarkus.http.cors.headers=*

# Habilitar cookies/credentials
quarkus.http.cors.credentials=true

quarkus.oidc.auth-server-url=http://localhost:8080/realms/unifor
quarkus.oidc.client-id=teste-unifor
quarkus.oidc.credentials.secret=OvaeyZokmz5EPOTK0U25gipe3XWzst95

#####POLICY ENFORCEMENT
quarkus.keycloak.policy-enforcer.enable=false
quarkus.keycloak.policy-enforcer.lazy-load-path=false
quarkus.keycloak.policy-enforcer.paths.1.path=/v1/auth/*
quarkus.keycloak.policy-enforcer.paths.2.path=/metrics
quarkus.keycloak.policy-enforcer.paths.1.enforcement-mode=DISABLED
quarkus.keycloak.policy-enforcer.paths.2.enforcement-mode=DISABLED


# Ativar o suporte ao Micrometer para coletar métricas
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/metrics

# Expor métricas via endpoints do Quarkus
quarkus.management.endpoints.enabled=true
quarkus.management.endpoints.web.exposure.include=metrics,prometheus
quarkus.management.http.port=8180  # Se necessário, defina a porta



